

services:
  postgres:
    image: postgres:17
    container_name: ticket_app_db
    environment:
      POSTGRES_DB: ticket_db 
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD} 
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data 
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:  
      - app_network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin_interface
    environment:
      PGADMIN_DEFAULT_EMAIL: ${ADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${ADMIN_PASSWORD}
      PGADMIN_DEFAULT_SERVER_MODE: 'FALSE'
    ports:
      - 8080:80
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    restart: unless-stopped
    networks: 
      - app_network

  ticket_api:
    build: .
    container_name: ticket_api
    env_file: .env
    environment:
      DATABASE_URL: ${DATABASE_URL}
      RUST_LOG: ${RUST_LOG}
    ports:
      - 3000:3000
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app_network


networks:
  app_network:
    driver: bridge

volumes:
  postgres_data:
  pgadmin_data:
